@model CheckoutConfirmModel
<div class="checkout-data order-summary-content col-12 px-0">
    @await Component.InvokeAsync("Widget", new { widgetZone = "op_checkout_confirm_top" })
    <div class="order-summary">
        @await Component.InvokeAsync("OrderSummary", new { prepareAndDisplayOrderReviewData = true })
    </div>
    <div class="confirm-order">
        <div>
            @if (!String.IsNullOrEmpty(Model.MinOrderTotalWarning))
            {   
                <div class="alert alert-danger my-3">
                    @Model.MinOrderTotalWarning
                </div>
            }
        </div>
        @if (Model.Warnings.Any())
        {
            <div class="alert alert-danger my-3">
                    @foreach (var warning in Model.Warnings)
                    {
                        @warning
                    }
            </div>
        }
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = "op_checkout_confirm_bottom" })

    @if (String.IsNullOrEmpty(Model.MinOrderTotalWarning) && Model.TermsOfServiceOnOrderConfirmPage)
    {
        <div id="confirm-data-modal" data-title="@T("Checkout.TermsOfService")" data-body="@T("Checkout.TermsOfService.PleaseAccept")" data-terms="@T("Checkout.TermsOfService.PleaseAccept")" data-link="@Url.RouteUrl("Topic", new { SeName = TopicSeNameConstants.Conditionsofuse })" data-linkname="@T("Checkout.TermsOfService.Read")">
        </div>
        <b-button id="new-back-confirm_order">@T("Common.Back")</b-button>
        <b-button variant="info" @@click="showMsgBoxOne">
            @T("Common.Confirm")
        </b-button>
    }
    else
    {
        <input type="button" class="btn btn-info confirm-order-next-step-button" onclick="ConfirmOrder.save()" value="@T("Common.Confirm")" />
    }
</div>
